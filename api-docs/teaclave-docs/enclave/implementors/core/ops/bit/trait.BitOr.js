(function() {var implementors = {
"ahash":[["impl&lt;T, S&gt; BitOr&lt;&amp;<a class=\"struct\" href=\"ahash/struct.AHashSet.html\" title=\"struct ahash::AHashSet\">AHashSet</a>&lt;T, S&gt;&gt; for &amp;<a class=\"struct\" href=\"ahash/struct.AHashSet.html\" title=\"struct ahash::AHashSet\">AHashSet</a>&lt;T, S&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Eq + Hash + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher + Default,</span>"]],
"axum":[["impl BitOr&lt;<a class=\"struct\" href=\"axum/routing/struct.MethodFilter.html\" title=\"struct axum::routing::MethodFilter\">MethodFilter</a>&gt; for <a class=\"struct\" href=\"axum/routing/struct.MethodFilter.html\" title=\"struct axum::routing::MethodFilter\">MethodFilter</a>"]],
"fixedbitset":[["impl&lt;'a&gt; BitOr&lt;&amp;'a <a class=\"struct\" href=\"fixedbitset/struct.FixedBitSet.html\" title=\"struct fixedbitset::FixedBitSet\">FixedBitSet</a>&gt; for &amp;'a <a class=\"struct\" href=\"fixedbitset/struct.FixedBitSet.html\" title=\"struct fixedbitset::FixedBitSet\">FixedBitSet</a>"]],
"hashbrown":[["impl&lt;T, S, A&gt; BitOr&lt;&amp;<a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt;&gt; for &amp;<a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Eq + Hash + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher + Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Allocator + Clone,</span>"]],
"indexmap":[["impl&lt;T, S1, S2&gt; BitOr&lt;&amp;<a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for &amp;<a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Eq + Hash + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: BuildHasher + Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: BuildHasher,</span>"]],
"mio":[["impl BitOr&lt;<a class=\"struct\" href=\"mio/struct.Interest.html\" title=\"struct mio::Interest\">Interest</a>&gt; for <a class=\"struct\" href=\"mio/struct.Interest.html\" title=\"struct mio::Interest\">Interest</a>"]],
"num_bigint":[["impl BitOr&lt;<a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>&gt; for <a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>"],["impl&lt;'a&gt; BitOr&lt;<a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>&gt; for &amp;'a <a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>"],["impl&lt;'a, 'b&gt; BitOr&lt;&amp;'b <a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>&gt; for &amp;'a <a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>"],["impl&lt;'a&gt; BitOr&lt;&amp;'a <a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>&gt; for <a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>&gt; for <a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>"],["impl&lt;'a&gt; BitOr&lt;<a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>&gt; for &amp;'a <a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>"],["impl&lt;'a, 'b&gt; BitOr&lt;&amp;'b <a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>&gt; for &amp;'a <a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>"],["impl&lt;'a&gt; BitOr&lt;&amp;'a <a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>&gt; for <a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>"]],
"ritelinked":[["impl&lt;'a, 'b, T, S&gt; BitOr&lt;&amp;'b <a class=\"struct\" href=\"ritelinked/linked_hash_set/struct.LinkedHashSet.html\" title=\"struct ritelinked::linked_hash_set::LinkedHashSet\">LinkedHashSet</a>&lt;T, S&gt;&gt; for &amp;'a <a class=\"struct\" href=\"ritelinked/linked_hash_set/struct.LinkedHashSet.html\" title=\"struct ritelinked::linked_hash_set::LinkedHashSet\">LinkedHashSet</a>&lt;T, S&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Eq + Hash + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher + Default,</span>"]],
"rulinalg":[["impl&lt;T:&nbsp;Copy + BitOr&lt;T, Output = T&gt;&gt; BitOr&lt;T&gt; for <a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;"],["impl&lt;'a, T:&nbsp;Copy + BitOr&lt;T, Output = T&gt;&gt; BitOr&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;"],["impl&lt;'a, T:&nbsp;Copy + BitOr&lt;T, Output = T&gt;&gt; BitOr&lt;T&gt; for &amp;'a <a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;"],["impl&lt;'a, 'b, T:&nbsp;Copy + BitOr&lt;T, Output = T&gt;&gt; BitOr&lt;&amp;'b T&gt; for &amp;'a <a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;"],["impl&lt;T:&nbsp;Copy + BitOr&lt;T, Output = T&gt;&gt; BitOr&lt;<a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;"],["impl&lt;'a, T:&nbsp;Copy + BitOr&lt;T, Output = T&gt;&gt; BitOr&lt;&amp;'a <a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;"],["impl&lt;'a, T:&nbsp;Copy + BitOr&lt;T, Output = T&gt;&gt; BitOr&lt;<a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;&gt; for &amp;'a <a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;"],["impl&lt;'a, 'b, T:&nbsp;Copy + BitOr&lt;T, Output = T&gt;&gt; BitOr&lt;&amp;'b <a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;&gt; for &amp;'a <a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;"]],
"sgx_types":[["impl BitOr&lt;<a class=\"struct\" href=\"sgx_types/types/struct.AttributesFlags.html\" title=\"struct sgx_types::types::AttributesFlags\">AttributesFlags</a>&gt; for <a class=\"struct\" href=\"sgx_types/types/struct.AttributesFlags.html\" title=\"struct sgx_types::types::AttributesFlags\">AttributesFlags</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"sgx_types/types/struct.MiscSelect.html\" title=\"struct sgx_types::types::MiscSelect\">MiscSelect</a>&gt; for <a class=\"struct\" href=\"sgx_types/types/struct.MiscSelect.html\" title=\"struct sgx_types::types::MiscSelect\">MiscSelect</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"sgx_types/types/struct.KeyPolicy.html\" title=\"struct sgx_types::types::KeyPolicy\">KeyPolicy</a>&gt; for <a class=\"struct\" href=\"sgx_types/types/struct.KeyPolicy.html\" title=\"struct sgx_types::types::KeyPolicy\">KeyPolicy</a>"]],
"tantivy":[["impl&lt;T:&nbsp;Into&lt;<a class=\"struct\" href=\"tantivy/schema/struct.FacetOptions.html\" title=\"struct tantivy::schema::FacetOptions\">FacetOptions</a>&gt;&gt; BitOr&lt;T&gt; for <a class=\"struct\" href=\"tantivy/schema/struct.FacetOptions.html\" title=\"struct tantivy::schema::FacetOptions\">FacetOptions</a>"],["impl&lt;T:&nbsp;Into&lt;<a class=\"struct\" href=\"tantivy/schema/struct.BytesOptions.html\" title=\"struct tantivy::schema::BytesOptions\">BytesOptions</a>&gt;&gt; BitOr&lt;T&gt; for <a class=\"struct\" href=\"tantivy/schema/struct.BytesOptions.html\" title=\"struct tantivy::schema::BytesOptions\">BytesOptions</a>"],["impl&lt;T:&nbsp;Into&lt;<a class=\"struct\" href=\"tantivy/schema/struct.DateOptions.html\" title=\"struct tantivy::schema::DateOptions\">DateOptions</a>&gt;&gt; BitOr&lt;T&gt; for <a class=\"struct\" href=\"tantivy/schema/struct.DateOptions.html\" title=\"struct tantivy::schema::DateOptions\">DateOptions</a>"],["impl&lt;T:&nbsp;Into&lt;<a class=\"struct\" href=\"tantivy/schema/struct.IpAddrOptions.html\" title=\"struct tantivy::schema::IpAddrOptions\">IpAddrOptions</a>&gt;&gt; BitOr&lt;T&gt; for <a class=\"struct\" href=\"tantivy/schema/struct.IpAddrOptions.html\" title=\"struct tantivy::schema::IpAddrOptions\">IpAddrOptions</a>"],["impl&lt;T:&nbsp;Into&lt;<a class=\"struct\" href=\"tantivy/schema/struct.JsonObjectOptions.html\" title=\"struct tantivy::schema::JsonObjectOptions\">JsonObjectOptions</a>&gt;&gt; BitOr&lt;T&gt; for <a class=\"struct\" href=\"tantivy/schema/struct.JsonObjectOptions.html\" title=\"struct tantivy::schema::JsonObjectOptions\">JsonObjectOptions</a>"],["impl&lt;T:&nbsp;Into&lt;<a class=\"struct\" href=\"tantivy/schema/struct.NumericOptions.html\" title=\"struct tantivy::schema::NumericOptions\">NumericOptions</a>&gt;&gt; BitOr&lt;T&gt; for <a class=\"struct\" href=\"tantivy/schema/struct.NumericOptions.html\" title=\"struct tantivy::schema::NumericOptions\">NumericOptions</a>"],["impl&lt;T:&nbsp;Into&lt;<a class=\"struct\" href=\"tantivy/schema/struct.TextOptions.html\" title=\"struct tantivy::schema::TextOptions\">TextOptions</a>&gt;&gt; BitOr&lt;T&gt; for <a class=\"struct\" href=\"tantivy/schema/struct.TextOptions.html\" title=\"struct tantivy::schema::TextOptions\">TextOptions</a>"]],
"tokio":[["impl BitOr&lt;<a class=\"struct\" href=\"tokio/io/struct.Interest.html\" title=\"struct tokio::io::Interest\">Interest</a>&gt; for <a class=\"struct\" href=\"tokio/io/struct.Interest.html\" title=\"struct tokio::io::Interest\">Interest</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"tokio/io/struct.Ready.html\" title=\"struct tokio::io::Ready\">Ready</a>&gt; for <a class=\"struct\" href=\"tokio/io/struct.Ready.html\" title=\"struct tokio::io::Ready\">Ready</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()