(function() {var implementors = {
"axum":[["impl Future for <a class=\"struct\" href=\"axum/error_handling/future/struct.HandleErrorFuture.html\" title=\"struct axum::error_handling::future::HandleErrorFuture\">HandleErrorFuture</a>"],["impl&lt;F&gt; Future for <a class=\"struct\" href=\"axum/handler/future/struct.IntoServiceFuture.html\" title=\"struct axum::handler::future::IntoServiceFuture\">IntoServiceFuture</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/future/struct.Map.html\" title=\"struct futures_util::future::future::Map\">Map</a>&lt;F, fn(_: <a class=\"type\" href=\"axum/response/type.Response.html\" title=\"type axum::response::Response\">Response</a>) -&gt; Result&lt;<a class=\"type\" href=\"axum/response/type.Response.html\" title=\"type axum::response::Response\">Response</a>, Infallible&gt;&gt;: Future,</span>"],["impl&lt;B, S&gt; Future for <a class=\"struct\" href=\"axum/handler/future/struct.LayeredFuture.html\" title=\"struct axum::handler::future::LayeredFuture\">LayeredFuture</a>&lt;B, S&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;<a class=\"struct\" href=\"http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;&gt;,</span>"],["impl&lt;B, T, E, S&gt; Future for <a class=\"struct\" href=\"axum/middleware/future/struct.FromExtractorResponseFuture.html\" title=\"struct axum::middleware::future::FromExtractorResponseFuture\">ResponseFuture</a>&lt;B, T, E, S&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"axum/extract/trait.FromRequestParts.html\" title=\"trait axum::extract::FromRequestParts\">FromRequestParts</a>&lt;S&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;<a class=\"struct\" href=\"http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"associatedtype\" href=\"tower_service/trait.Service.html#associatedtype.Response\" title=\"type tower_service::Service::Response\">Response</a>: <a class=\"trait\" href=\"axum/response/trait.IntoResponse.html\" title=\"trait axum::response::IntoResponse\">IntoResponse</a>,</span>"],["impl Future for <a class=\"struct\" href=\"axum/middleware/future/struct.FromFnResponseFuture.html\" title=\"struct axum::middleware::future::FromFnResponseFuture\">ResponseFuture</a>"],["impl Future for <a class=\"struct\" href=\"axum/middleware/future/struct.MapRequestResponseFuture.html\" title=\"struct axum::middleware::future::MapRequestResponseFuture\">ResponseFuture</a>"],["impl Future for <a class=\"struct\" href=\"axum/middleware/future/struct.MapResponseResponseFuture.html\" title=\"struct axum::middleware::future::MapResponseResponseFuture\">ResponseFuture</a>"],["impl&lt;S&gt; Future for <a class=\"struct\" href=\"axum/routing/future/struct.IntoMakeServiceFuture.html\" title=\"struct axum::routing::future::IntoMakeServiceFuture\">IntoMakeServiceFuture</a>&lt;S&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ready&lt;Result&lt;S, Infallible&gt;&gt;: Future,</span>"],["impl&lt;B, E&gt; Future for <a class=\"struct\" href=\"axum/routing/future/struct.RouteFuture.html\" title=\"struct axum::routing::future::RouteFuture\">RouteFuture</a>&lt;B, E&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"http_body/trait.Body.html\" title=\"trait http_body::Body\">HttpBody</a>,</span>"],["impl&lt;B&gt; Future for <a class=\"struct\" href=\"axum/routing/future/struct.InfallibleRouteFuture.html\" title=\"struct axum::routing::future::InfallibleRouteFuture\">InfallibleRouteFuture</a>&lt;B&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"http_body/trait.Body.html\" title=\"trait http_body::Body\">HttpBody</a>,</span>"]],
"either":[["impl&lt;L, R&gt; Future for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Future&lt;Output = L::Output&gt;,</span>"]],
"futures_channel":[["impl&lt;T&gt; Future for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Cancellation.html\" title=\"struct futures_channel::oneshot::Cancellation\">Cancellation</a>&lt;'_, T&gt;"],["impl&lt;T&gt; Future for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Receiver.html\" title=\"struct futures_channel::oneshot::Receiver\">Receiver</a>&lt;T&gt;"]],
"futures_task":[["impl&lt;T&gt; Future for <a class=\"struct\" href=\"futures_task/struct.LocalFutureObj.html\" title=\"struct futures_task::LocalFutureObj\">LocalFutureObj</a>&lt;'_, T&gt;"],["impl&lt;T&gt; Future for <a class=\"struct\" href=\"futures_task/struct.FutureObj.html\" title=\"struct futures_task::FutureObj\">FutureObj</a>&lt;'_, T&gt;"]],
"futures_util":[["impl&lt;Fut:&nbsp;Future&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Fuse.html\" title=\"struct futures_util::future::Fuse\">Fuse</a>&lt;Fut&gt;"],["impl&lt;F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Flatten.html\" title=\"struct futures_util::future::Flatten\">Flatten</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Flatten&lt;F, &lt;F as Future&gt;::Output&gt;: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,</span>"],["impl&lt;Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Map&lt;Fut, F&gt;: Future,</span>"],["impl&lt;Fut, T&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.MapInto.html\" title=\"struct futures_util::future::MapInto\">MapInto</a>&lt;Fut, T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;Fut, IntoFn&lt;T&gt;&gt;: Future,</span>"],["impl&lt;Fut1, Fut2, F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Then.html\" title=\"struct futures_util::future::Then\">Then</a>&lt;Fut1, Fut2, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Flatten&lt;<a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;Fut1, F&gt;, Fut2&gt;: Future,</span>"],["impl&lt;Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Inspect.html\" title=\"struct futures_util::future::Inspect\">Inspect</a>&lt;Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Map&lt;Fut, InspectFn&lt;F&gt;&gt;: Future,</span>"],["impl&lt;Fut&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.NeverError.html\" title=\"struct futures_util::future::NeverError\">NeverError</a>&lt;Fut&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;Fut, OkFn&lt;<a class=\"type\" href=\"futures_util/never/type.Never.html\" title=\"type futures_util::never::Never\">Never</a>&gt;&gt;: Future,</span>"],["impl&lt;Fut&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.UnitError.html\" title=\"struct futures_util::future::UnitError\">UnitError</a>&lt;Fut&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;Fut, OkFn&lt;()&gt;&gt;: Future,</span>"],["impl&lt;Fut:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt;"],["impl&lt;Fut1, Fut2&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.TryFlatten.html\" title=\"struct futures_util::future::TryFlatten\">TryFlatten</a>&lt;Fut1, Fut2&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TryFlatten&lt;Fut1, Fut2&gt;: Future,</span>"],["impl&lt;Fut1, Fut2, F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.AndThen.html\" title=\"struct futures_util::future::AndThen\">AndThen</a>&lt;Fut1, Fut2, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/struct.TryFlatten.html\" title=\"struct futures_util::future::TryFlatten\">TryFlatten</a>&lt;<a class=\"struct\" href=\"futures_util/future/struct.MapOk.html\" title=\"struct futures_util::future::MapOk\">MapOk</a>&lt;Fut1, F&gt;, Fut2&gt;: Future,</span>"],["impl&lt;Fut1, Fut2, F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.OrElse.html\" title=\"struct futures_util::future::OrElse\">OrElse</a>&lt;Fut1, Fut2, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TryFlattenErr&lt;<a class=\"struct\" href=\"futures_util/future/struct.MapErr.html\" title=\"struct futures_util::future::MapErr\">MapErr</a>&lt;Fut1, F&gt;, Fut2&gt;: Future,</span>"],["impl&lt;Fut, E&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.ErrInto.html\" title=\"struct futures_util::future::ErrInto\">ErrInto</a>&lt;Fut, E&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/struct.MapErr.html\" title=\"struct futures_util::future::MapErr\">MapErr</a>&lt;Fut, IntoFn&lt;E&gt;&gt;: Future,</span>"],["impl&lt;Fut, E&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.OkInto.html\" title=\"struct futures_util::future::OkInto\">OkInto</a>&lt;Fut, E&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/struct.MapOk.html\" title=\"struct futures_util::future::MapOk\">MapOk</a>&lt;Fut, IntoFn&lt;E&gt;&gt;: Future,</span>"],["impl&lt;Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.InspectOk.html\" title=\"struct futures_util::future::InspectOk\">InspectOk</a>&lt;Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/struct.Inspect.html\" title=\"struct futures_util::future::Inspect\">Inspect</a>&lt;<a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt;, InspectOkFn&lt;F&gt;&gt;: Future,</span>"],["impl&lt;Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.InspectErr.html\" title=\"struct futures_util::future::InspectErr\">InspectErr</a>&lt;Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/struct.Inspect.html\" title=\"struct futures_util::future::Inspect\">Inspect</a>&lt;<a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt;, InspectErrFn&lt;F&gt;&gt;: Future,</span>"],["impl&lt;Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.MapOk.html\" title=\"struct futures_util::future::MapOk\">MapOk</a>&lt;Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;<a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt;, MapOkFn&lt;F&gt;&gt;: Future,</span>"],["impl&lt;Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.MapErr.html\" title=\"struct futures_util::future::MapErr\">MapErr</a>&lt;Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;<a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt;, MapErrFn&lt;F&gt;&gt;: Future,</span>"],["impl&lt;Fut, F, G&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.MapOkOrElse.html\" title=\"struct futures_util::future::MapOkOrElse\">MapOkOrElse</a>&lt;Fut, F, G&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;<a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt;, ChainFn&lt;MapOkFn&lt;F&gt;, ChainFn&lt;MapErrFn&lt;G&gt;, MergeResultFn&gt;&gt;&gt;: Future,</span>"],["impl&lt;Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.UnwrapOrElse.html\" title=\"struct futures_util::future::UnwrapOrElse\">UnwrapOrElse</a>&lt;Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;<a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt;, UnwrapOrElseFn&lt;F&gt;&gt;: Future,</span>"],["impl&lt;F, R&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Lazy.html\" title=\"struct futures_util::future::Lazy\">Lazy</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnOnce(&amp;mut Context&lt;'_&gt;) -&gt; R,</span>"],["impl&lt;T&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Pending.html\" title=\"struct futures_util::future::Pending\">Pending</a>&lt;T&gt;"],["impl&lt;Fut:&nbsp;Future&gt; Future for <a class=\"enum\" href=\"futures_util/future/enum.MaybeDone.html\" title=\"enum futures_util::future::MaybeDone\">MaybeDone</a>&lt;Fut&gt;"],["impl&lt;Fut:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt; Future for <a class=\"enum\" href=\"futures_util/future/enum.TryMaybeDone.html\" title=\"enum futures_util::future::TryMaybeDone\">TryMaybeDone</a>&lt;Fut&gt;"],["impl&lt;F:&nbsp;Future&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.OptionFuture.html\" title=\"struct futures_util::future::OptionFuture\">OptionFuture</a>&lt;F&gt;"],["impl&lt;T, F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.PollFn.html\" title=\"struct futures_util::future::PollFn\">PollFn</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnMut(&amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;T&gt;,</span>"],["impl&lt;T, F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.PollImmediate.html\" title=\"struct futures_util::future::PollImmediate\">PollImmediate</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future&lt;Output = T&gt;,</span>"],["impl&lt;T&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Ready.html\" title=\"struct futures_util::future::Ready\">Ready</a>&lt;T&gt;"],["impl&lt;Fut1:&nbsp;Future, Fut2:&nbsp;Future&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Join.html\" title=\"struct futures_util::future::Join\">Join</a>&lt;Fut1, Fut2&gt;"],["impl&lt;Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Join3.html\" title=\"struct futures_util::future::Join3\">Join3</a>&lt;Fut1, Fut2, Fut3&gt;"],["impl&lt;Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future, Fut4:&nbsp;Future&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Join4.html\" title=\"struct futures_util::future::Join4\">Join4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt;"],["impl&lt;Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future, Fut4:&nbsp;Future, Fut5:&nbsp;Future&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Join5.html\" title=\"struct futures_util::future::Join5\">Join5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt;"],["impl&lt;F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.JoinAll.html\" title=\"struct futures_util::future::JoinAll\">JoinAll</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,</span>"],["impl&lt;A, B&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Select.html\" title=\"struct futures_util::future::Select\">Select</a>&lt;A, B&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Future + Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Future + Unpin,</span>"],["impl&lt;Fut:&nbsp;Future + Unpin&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.SelectAll.html\" title=\"struct futures_util::future::SelectAll\">SelectAll</a>&lt;Fut&gt;"],["impl&lt;Fut1, Fut2&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin.html\" title=\"struct futures_util::future::TryJoin\">TryJoin</a>&lt;Fut1, Fut2&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Error = Fut1::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>&gt;,</span>"],["impl&lt;Fut1, Fut2, Fut3&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin3.html\" title=\"struct futures_util::future::TryJoin3\">TryJoin3</a>&lt;Fut1, Fut2, Fut3&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Error = Fut1::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Error = Fut1::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>&gt;,</span>"],["impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin4.html\" title=\"struct futures_util::future::TryJoin4\">TryJoin4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Error = Fut1::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Error = Fut1::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Error = Fut1::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>&gt;,</span>"],["impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin5.html\" title=\"struct futures_util::future::TryJoin5\">TryJoin5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Error = Fut1::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Error = Fut1::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Error = Fut1::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Error = Fut1::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>&gt;,</span>"],["impl&lt;F&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.TryJoinAll.html\" title=\"struct futures_util::future::TryJoinAll\">TryJoinAll</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>,</span>"],["impl&lt;A:&nbsp;Unpin, B:&nbsp;Unpin&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.TrySelect.html\" title=\"struct futures_util::future::TrySelect\">TrySelect</a>&lt;A, B&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>,</span>"],["impl&lt;Fut:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a> + Unpin&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.SelectOk.html\" title=\"struct futures_util::future::SelectOk\">SelectOk</a>&lt;Fut&gt;"],["impl&lt;A, B&gt; Future for <a class=\"enum\" href=\"futures_util/future/enum.Either.html\" title=\"enum futures_util::future::Either\">Either</a>&lt;A, B&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Future&lt;Output = A::Output&gt;,</span>"],["impl&lt;St, C&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.Collect.html\" title=\"struct futures_util::stream::Collect\">Collect</a>&lt;St, C&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Default + Extend&lt;St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>&gt;,</span>"],["impl&lt;St, A, B, FromA, FromB&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.Unzip.html\" title=\"struct futures_util::stream::Unzip\">Unzip</a>&lt;St, FromA, FromB&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&lt;Item = (A, B)&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;FromA: Default + Extend&lt;A&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;FromB: Default + Extend&lt;B&gt;,</span>"],["impl&lt;St&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.Concat.html\" title=\"struct futures_util::stream::Concat\">Concat</a>&lt;St&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Extend&lt;&lt;St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a> as IntoIterator&gt;::Item&gt; + IntoIterator + Default,</span>"],["impl&lt;St:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.Count.html\" title=\"struct futures_util::stream::Count\">Count</a>&lt;St&gt;"],["impl&lt;St, Fut, T, F&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.Fold.html\" title=\"struct futures_util::stream::Fold\">Fold</a>&lt;St, Fut, T, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnMut(T, St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>) -&gt; Fut,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Future&lt;Output = T&gt;,</span>"],["impl&lt;St, Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.Any.html\" title=\"struct futures_util::stream::Any\">Any</a>&lt;St, Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnMut(St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>) -&gt; Fut,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Future&lt;Output = bool&gt;,</span>"],["impl&lt;St, Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.All.html\" title=\"struct futures_util::stream::All\">All</a>&lt;St, Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnMut(St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>) -&gt; Fut,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Future&lt;Output = bool&gt;,</span>"],["impl&lt;St, Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.ForEach.html\" title=\"struct futures_util::stream::ForEach\">ForEach</a>&lt;St, Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnMut(St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>) -&gt; Fut,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Future&lt;Output = ()&gt;,</span>"],["impl&lt;St:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + Unpin&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.StreamFuture.html\" title=\"struct futures_util::stream::StreamFuture\">StreamFuture</a>&lt;St&gt;"],["impl&lt;St:&nbsp;?Sized + <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + Unpin&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.Next.html\" title=\"struct futures_util::stream::Next\">Next</a>&lt;'_, St&gt;"],["impl&lt;St:&nbsp;?Sized + <a class=\"trait\" href=\"futures_util/stream/trait.FusedStream.html\" title=\"trait futures_util::stream::FusedStream\">FusedStream</a> + Unpin&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.SelectNextSome.html\" title=\"struct futures_util::stream::SelectNextSome\">SelectNextSome</a>&lt;'_, St&gt;"],["impl&lt;'a, St&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.Peek.html\" title=\"struct futures_util::stream::Peek\">Peek</a>&lt;'a, St&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,</span>"],["impl&lt;'a, St&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.PeekMut.html\" title=\"struct futures_util::stream::PeekMut\">PeekMut</a>&lt;'a, St&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,</span>"],["impl&lt;St, F&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.NextIf.html\" title=\"struct futures_util::stream::NextIf\">NextIf</a>&lt;'_, St, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: for&lt;'a&gt; FnOnce1&lt;&amp;'a St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>, Output = bool&gt;,</span>"],["impl&lt;St, T&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.NextIfEq.html\" title=\"struct futures_util::stream::NextIfEq\">NextIfEq</a>&lt;'_, St, T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ?Sized,<br>&nbsp;&nbsp;&nbsp;&nbsp;St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: PartialEq&lt;T&gt;,</span>"],["impl&lt;St, Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.ForEachConcurrent.html\" title=\"struct futures_util::stream::ForEachConcurrent\">ForEachConcurrent</a>&lt;St, Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnMut(St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>) -&gt; Fut,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Future&lt;Output = ()&gt;,</span>"],["impl&lt;St:&nbsp;?Sized + <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a> + Unpin&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.TryNext.html\" title=\"struct futures_util::stream::TryNext\">TryNext</a>&lt;'_, St&gt;"],["impl&lt;St, Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEach.html\" title=\"struct futures_util::stream::TryForEach\">TryForEach</a>&lt;St, Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnMut(St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>) -&gt; Fut,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Ok = (), Error = St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Error\" title=\"type futures_util::stream::TryStream::Error\">Error</a>&gt;,</span>"],["impl&lt;St, C&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.TryCollect.html\" title=\"struct futures_util::stream::TryCollect\">TryCollect</a>&lt;St, C&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Default + Extend&lt;St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>&gt;,</span>"],["impl&lt;St&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.TryConcat.html\" title=\"struct futures_util::stream::TryConcat\">TryConcat</a>&lt;St&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Extend&lt;&lt;St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a> as IntoIterator&gt;::Item&gt; + IntoIterator + Default,</span>"],["impl&lt;St, Fut, T, F&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.TryFold.html\" title=\"struct futures_util::stream::TryFold\">TryFold</a>&lt;St, Fut, T, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnMut(T, St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>) -&gt; Fut,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Ok = T, Error = St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Error\" title=\"type futures_util::stream::TryStream::Error\">Error</a>&gt;,</span>"],["impl&lt;St, Fut, F&gt; Future for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEachConcurrent.html\" title=\"struct futures_util::stream::TryForEachConcurrent\">TryForEachConcurrent</a>&lt;St, Fut, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnMut(St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>) -&gt; Fut,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Future&lt;Output = Result&lt;(), St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Error\" title=\"type futures_util::stream::TryStream::Error\">Error</a>&gt;&gt;,</span>"],["impl&lt;Fut&gt; Future for <a class=\"struct\" href=\"futures_util/future/struct.Abortable.html\" title=\"struct futures_util::future::Abortable\">Abortable</a>&lt;Fut&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Future,</span>"]],
"h2":[["impl&lt;B&gt; Future for <a class=\"struct\" href=\"h2/client/struct.ReadySendRequest.html\" title=\"struct h2::client::ReadySendRequest\">ReadySendRequest</a>&lt;B&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"bytes/buf/buf_impl/trait.Buf.html\" title=\"trait bytes::buf::buf_impl::Buf\">Buf</a>,</span>"],["impl&lt;T, B&gt; Future for <a class=\"struct\" href=\"h2/client/struct.Connection.html\" title=\"struct h2::client::Connection\">Connection</a>&lt;T, B&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"bytes/buf/buf_impl/trait.Buf.html\" title=\"trait bytes::buf::buf_impl::Buf\">Buf</a>,</span>"],["impl Future for <a class=\"struct\" href=\"h2/client/struct.ResponseFuture.html\" title=\"struct h2::client::ResponseFuture\">ResponseFuture</a>"],["impl Future for <a class=\"struct\" href=\"h2/client/struct.PushedResponseFuture.html\" title=\"struct h2::client::PushedResponseFuture\">PushedResponseFuture</a>"],["impl&lt;T, B:&nbsp;<a class=\"trait\" href=\"bytes/buf/buf_impl/trait.Buf.html\" title=\"trait bytes::buf::buf_impl::Buf\">Buf</a>&gt; Future for <a class=\"struct\" href=\"h2/server/struct.Handshake.html\" title=\"struct h2::server::Handshake\">Handshake</a>&lt;T, B&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"bytes/buf/buf_impl/trait.Buf.html\" title=\"trait bytes::buf::buf_impl::Buf\">Buf</a>,</span>"]],
"http_body":[["impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"http_body/trait.Body.html\" title=\"trait http_body::Body\">Body</a> + Unpin + ?Sized&gt; Future for <a class=\"struct\" href=\"http_body/struct.Data.html\" title=\"struct http_body::Data\">Data</a>&lt;'a, T&gt;"],["impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"http_body/trait.Body.html\" title=\"trait http_body::Body\">Body</a> + Unpin + ?Sized&gt; Future for <a class=\"struct\" href=\"http_body/struct.Trailers.html\" title=\"struct http_body::Trailers\">Trailers</a>&lt;'a, T&gt;"]],
"hyper":[["impl Future for <a class=\"struct\" href=\"hyper/upgrade/struct.OnUpgrade.html\" title=\"struct hyper::upgrade::OnUpgrade\">OnUpgrade</a>"],["impl Future for <a class=\"struct\" href=\"hyper/client/connect/dns/struct.GaiFuture.html\" title=\"struct hyper::client::connect::dns::GaiFuture\">GaiFuture</a>"],["impl Future for <a class=\"struct\" href=\"hyper/client/struct.ResponseFuture.html\" title=\"struct hyper::client::ResponseFuture\">ResponseFuture</a>"],["impl&lt;T, B&gt; Future for <a class=\"struct\" href=\"hyper/client/conn/struct.Connection.html\" title=\"struct hyper::client::conn::Connection\">Connection</a>&lt;T, B&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + Unpin + Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"hyper/body/trait.HttpBody.html\" title=\"trait hyper::body::HttpBody\">HttpBody</a> + Send + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"associatedtype\" href=\"hyper/body/trait.HttpBody.html#associatedtype.Data\" title=\"type hyper::body::HttpBody::Data\">Data</a>: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"associatedtype\" href=\"hyper/body/trait.HttpBody.html#associatedtype.Error\" title=\"type hyper::body::HttpBody::Error\">Error</a>: Into&lt;Box&lt;dyn StdError + Send + Sync&gt;&gt;,</span>"],["impl Future for <a class=\"struct\" href=\"hyper/client/conn/struct.ResponseFuture.html\" title=\"struct hyper::client::conn::ResponseFuture\">ResponseFuture</a>"],["impl&lt;I, B, S, E&gt; Future for <a class=\"struct\" href=\"hyper/server/conn/struct.Connection.html\" title=\"struct hyper::server::conn::Connection\">Connection</a>&lt;I, S, E&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: HttpService&lt;<a class=\"struct\" href=\"hyper/body/struct.Body.html\" title=\"struct hyper::body::Body\">Body</a>, ResBody = B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::Error: Into&lt;Box&lt;dyn StdError + Send + Sync&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"hyper/body/trait.HttpBody.html\" title=\"trait hyper::body::HttpBody\">HttpBody</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"associatedtype\" href=\"hyper/body/trait.HttpBody.html#associatedtype.Error\" title=\"type hyper::body::HttpBody::Error\">Error</a>: Into&lt;Box&lt;dyn StdError + Send + Sync&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: ConnStreamExec&lt;S::Future, B&gt;,</span>"],["impl&lt;I, IO, IE, S, B, E&gt; Future for <a class=\"struct\" href=\"hyper/server/struct.Server.html\" title=\"struct hyper::server::Server\">Server</a>&lt;I, S, E&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"hyper/server/accept/trait.Accept.html\" title=\"trait hyper::server::accept::Accept\">Accept</a>&lt;Conn = IO, Error = IE&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;IE: Into&lt;Box&lt;dyn StdError + Send + Sync&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: <a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + Unpin + Send + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: MakeServiceRef&lt;IO, <a class=\"struct\" href=\"hyper/body/struct.Body.html\" title=\"struct hyper::body::Body\">Body</a>, ResBody = B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::Error: Into&lt;Box&lt;dyn StdError + Send + Sync&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"hyper/body/trait.HttpBody.html\" title=\"trait hyper::body::HttpBody\">HttpBody</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"associatedtype\" href=\"hyper/body/trait.HttpBody.html#associatedtype.Error\" title=\"type hyper::body::HttpBody::Error\">Error</a>: Into&lt;Box&lt;dyn StdError + Send + Sync&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: ConnStreamExec&lt;&lt;S::Service as HttpService&lt;<a class=\"struct\" href=\"hyper/body/struct.Body.html\" title=\"struct hyper::body::Body\">Body</a>&gt;&gt;::Future, B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: NewSvcExec&lt;IO, S::Future, S::Service, E, NoopWatcher&gt;,</span>"],["impl&lt;I, F, S, FE, E, B&gt; Future for <a class=\"struct\" href=\"hyper/server/conn/struct.Connecting.html\" title=\"struct hyper::server::conn::Connecting\">Connecting</a>&lt;I, F, E&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future&lt;Output = Result&lt;S, FE&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: HttpService&lt;<a class=\"struct\" href=\"hyper/body/struct.Body.html\" title=\"struct hyper::body::Body\">Body</a>, ResBody = B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"hyper/body/trait.HttpBody.html\" title=\"trait hyper::body::HttpBody\">HttpBody</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"associatedtype\" href=\"hyper/body/trait.HttpBody.html#associatedtype.Error\" title=\"type hyper::body::HttpBody::Error\">Error</a>: Into&lt;Box&lt;dyn StdError + Send + Sync&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: ConnStreamExec&lt;S::Future, B&gt;,</span>"]],
"oneshot":[["impl&lt;T&gt; Future for <a class=\"struct\" href=\"oneshot/struct.Receiver.html\" title=\"struct oneshot::Receiver\">Receiver</a>&lt;T&gt;"]],
"sync_wrapper":[["impl&lt;F:&nbsp;Future&gt; Future for <a class=\"struct\" href=\"sync_wrapper/struct.SyncFuture.html\" title=\"struct sync_wrapper::SyncFuture\">SyncFuture</a>&lt;F&gt;"]],
"tantivy":[["impl&lt;T&gt; Future for <a class=\"struct\" href=\"tantivy/struct.FutureResult.html\" title=\"struct tantivy::FutureResult\">FutureResult</a>&lt;T&gt;"]],
"tokio":[["impl&lt;T&gt; Future for <a class=\"struct\" href=\"tokio/task/struct.JoinHandle.html\" title=\"struct tokio::task::JoinHandle\">JoinHandle</a>&lt;T&gt;"],["impl Future for <a class=\"struct\" href=\"tokio/sync/futures/struct.Notified.html\" title=\"struct tokio::sync::futures::Notified\">Notified</a>&lt;'_&gt;"],["impl&lt;T&gt; Future for <a class=\"struct\" href=\"tokio/sync/oneshot/struct.Receiver.html\" title=\"struct tokio::sync::oneshot::Receiver\">Receiver</a>&lt;T&gt;"],["impl Future for <a class=\"struct\" href=\"tokio/task/struct.LocalSet.html\" title=\"struct tokio::task::LocalSet\">LocalSet</a>"],["impl&lt;T:&nbsp;'static, F:&nbsp;Future&gt; Future for <a class=\"struct\" href=\"tokio/task/futures/struct.TaskLocalFuture.html\" title=\"struct tokio::task::futures::TaskLocalFuture\">TaskLocalFuture</a>&lt;T, F&gt;"],["impl&lt;F&gt; Future for <a class=\"struct\" href=\"tokio/task/struct.Unconstrained.html\" title=\"struct tokio::task::Unconstrained\">Unconstrained</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,</span>"],["impl Future for <a class=\"struct\" href=\"tokio/time/struct.Sleep.html\" title=\"struct tokio::time::Sleep\">Sleep</a>"],["impl&lt;T&gt; Future for <a class=\"struct\" href=\"tokio/time/struct.Timeout.html\" title=\"struct tokio::time::Timeout\">Timeout</a>&lt;T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Future,</span>"]],
"tokio_rustls":[["impl&lt;IO&gt; Future for <a class=\"struct\" href=\"tokio_rustls/struct.LazyConfigAcceptor.html\" title=\"struct tokio_rustls::LazyConfigAcceptor\">LazyConfigAcceptor</a>&lt;IO&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IO: <a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + Unpin,</span>"],["impl&lt;IO:&nbsp;<a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + Unpin&gt; Future for <a class=\"struct\" href=\"tokio_rustls/struct.Connect.html\" title=\"struct tokio_rustls::Connect\">Connect</a>&lt;IO&gt;"],["impl&lt;IO:&nbsp;<a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + Unpin&gt; Future for <a class=\"struct\" href=\"tokio_rustls/struct.Accept.html\" title=\"struct tokio_rustls::Accept\">Accept</a>&lt;IO&gt;"],["impl&lt;IO:&nbsp;<a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + Unpin&gt; Future for <a class=\"struct\" href=\"tokio_rustls/struct.FallibleConnect.html\" title=\"struct tokio_rustls::FallibleConnect\">FallibleConnect</a>&lt;IO&gt;"],["impl&lt;IO:&nbsp;<a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + Unpin&gt; Future for <a class=\"struct\" href=\"tokio_rustls/struct.FallibleAccept.html\" title=\"struct tokio_rustls::FallibleAccept\">FallibleAccept</a>&lt;IO&gt;"]],
"tokio_util":[["impl&lt;'a&gt; Future for <a class=\"struct\" href=\"tokio_util/sync/struct.WaitForCancellationFuture.html\" title=\"struct tokio_util::sync::WaitForCancellationFuture\">WaitForCancellationFuture</a>&lt;'a&gt;"],["impl Future for <a class=\"struct\" href=\"tokio_util/sync/struct.WaitForCancellationFutureOwned.html\" title=\"struct tokio_util::sync::WaitForCancellationFutureOwned\">WaitForCancellationFutureOwned</a>"],["impl&lt;T&gt; Future for <a class=\"struct\" href=\"tokio_util/sync/struct.ReusableBoxFuture.html\" title=\"struct tokio_util::sync::ReusableBoxFuture\">ReusableBoxFuture</a>&lt;'_, T&gt;"],["impl&lt;L, R, O&gt; Future for <a class=\"enum\" href=\"tokio_util/either/enum.Either.html\" title=\"enum tokio_util::either::Either\">Either</a>&lt;L, R&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Future&lt;Output = O&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Future&lt;Output = O&gt;,</span>"]],
"tonic":[["impl&lt;F, E, B&gt; Future for <a class=\"struct\" href=\"tonic/service/interceptor/struct.ResponseFuture.html\" title=\"struct tonic::service::interceptor::ResponseFuture\">ResponseFuture</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future&lt;Output = Result&lt;<a class=\"struct\" href=\"http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;B&gt;, E&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Into&lt;Box&lt;dyn Error + Send + Sync&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Default + <a class=\"trait\" href=\"http_body/trait.Body.html\" title=\"trait http_body::Body\">Body</a>&lt;Data = <a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>&gt; + Send + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"associatedtype\" href=\"http_body/trait.Body.html#associatedtype.Error\" title=\"type http_body::Body::Error\">Error</a>: Into&lt;Box&lt;dyn Error + Send + Sync&gt;&gt;,</span>"],["impl Future for <a class=\"struct\" href=\"tonic/transport/channel/struct.ResponseFuture.html\" title=\"struct tonic::transport::channel::ResponseFuture\">ResponseFuture</a>"]],
"tower":[["impl&lt;F, T, E, Req&gt; Future for <a class=\"struct\" href=\"tower/balance/p2c/struct.MakeFuture.html\" title=\"struct tower::balance::p2c::MakeFuture\">MakeFuture</a>&lt;F, Req&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future&lt;Output = Result&lt;T, E&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tower/discover/trait.Discover.html\" title=\"trait tower::discover::Discover\">Discover</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"tower/discover/trait.Discover.html\" title=\"trait tower::discover::Discover\">Discover</a>&gt;::<a class=\"associatedtype\" href=\"tower/discover/trait.Discover.html#associatedtype.Key\" title=\"type tower::discover::Discover::Key\">Key</a>: Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"tower/discover/trait.Discover.html\" title=\"trait tower::discover::Discover\">Discover</a>&gt;::<a class=\"associatedtype\" href=\"tower/discover/trait.Discover.html#associatedtype.Service\" title=\"type tower::discover::Discover::Service\">Service</a>: <a class=\"trait\" href=\"tower/trait.Service.html\" title=\"trait tower::Service\">Service</a>&lt;Req&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"tower/discover/trait.Discover.html\" title=\"trait tower::discover::Discover\">Discover</a>&gt;::<a class=\"associatedtype\" href=\"tower/discover/trait.Discover.html#associatedtype.Service\" title=\"type tower::discover::Discover::Service\">Service</a> as <a class=\"trait\" href=\"tower/trait.Service.html\" title=\"trait tower::Service\">Service</a>&lt;Req&gt;&gt;::<a class=\"associatedtype\" href=\"tower/trait.Service.html#associatedtype.Error\" title=\"type tower::Service::Error\">Error</a>: Into&lt;<a class=\"type\" href=\"tower/type.BoxError.html\" title=\"type tower::BoxError\">BoxError</a>&gt;,</span>"],["impl&lt;F, T, E&gt; Future for <a class=\"struct\" href=\"tower/buffer/future/struct.ResponseFuture.html\" title=\"struct tower::buffer::future::ResponseFuture\">ResponseFuture</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future&lt;Output = Result&lt;T, E&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Into&lt;<a class=\"type\" href=\"tower/type.BoxError.html\" title=\"type tower::BoxError\">BoxError</a>&gt;,</span>"],["impl&lt;F, T, E&gt; Future for <a class=\"struct\" href=\"tower/limit/concurrency/future/struct.ResponseFuture.html\" title=\"struct tower::limit::concurrency::future::ResponseFuture\">ResponseFuture</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future&lt;Output = Result&lt;T, E&gt;&gt;,</span>"],["impl&lt;F, C, H, T, E&gt; Future for <a class=\"struct\" href=\"tower/load/completion/struct.TrackCompletionFuture.html\" title=\"struct tower::load::completion::TrackCompletionFuture\">TrackCompletionFuture</a>&lt;F, C, H&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future&lt;Output = Result&lt;T, E&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"tower/load/completion/trait.TrackCompletion.html\" title=\"trait tower::load::completion::TrackCompletion\">TrackCompletion</a>&lt;H, T&gt;,</span>"],["impl&lt;S&gt; Future for <a class=\"struct\" href=\"tower/make/future/struct.SharedFuture.html\" title=\"struct tower::make::future::SharedFuture\">SharedFuture</a>&lt;S&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/ready/struct.Ready.html\" title=\"struct futures_util::future::ready::Ready\">Ready</a>&lt;Result&lt;S, Infallible&gt;&gt;: Future,</span>"],["impl&lt;F, T, E&gt; Future for <a class=\"struct\" href=\"tower/timeout/future/struct.ResponseFuture.html\" title=\"struct tower::timeout::future::ResponseFuture\">ResponseFuture</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future&lt;Output = Result&lt;T, E&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Into&lt;<a class=\"type\" href=\"tower/type.BoxError.html\" title=\"type tower::BoxError\">BoxError</a>&gt;,</span>"],["impl&lt;F1, F2:&nbsp;<a class=\"trait\" href=\"futures_core/future/trait.TryFuture.html\" title=\"trait futures_core::future::TryFuture\">TryFuture</a>, N&gt; Future for <a class=\"struct\" href=\"tower/util/future/struct.AndThenFuture.html\" title=\"struct tower::util::future::AndThenFuture\">AndThenFuture</a>&lt;F1, F2, N&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/try_future/struct.AndThen.html\" title=\"struct futures_util::future::try_future::AndThen\">AndThen</a>&lt;<a class=\"struct\" href=\"futures_util/future/try_future/struct.ErrInto.html\" title=\"struct futures_util::future::try_future::ErrInto\">ErrInto</a>&lt;F1, F2::<a class=\"associatedtype\" href=\"futures_core/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_core::future::TryFuture::Error\">Error</a>&gt;, F2, N&gt;: Future,</span>"],["impl&lt;A, B, T, AE, BE&gt; Future for <a class=\"enum\" href=\"tower/util/enum.Either.html\" title=\"enum tower::util::Either\">Either</a>&lt;A, B&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Future&lt;Output = Result&lt;T, AE&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;AE: Into&lt;<a class=\"type\" href=\"tower/type.BoxError.html\" title=\"type tower::BoxError\">BoxError</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Future&lt;Output = Result&lt;T, BE&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;BE: Into&lt;<a class=\"type\" href=\"tower/type.BoxError.html\" title=\"type tower::BoxError\">BoxError</a>&gt;,</span>"],["impl&lt;F, N&gt; Future for <a class=\"struct\" href=\"tower/util/future/struct.MapErrFuture.html\" title=\"struct tower::util::future::MapErrFuture\">MapErrFuture</a>&lt;F, N&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/try_future/struct.MapErr.html\" title=\"struct futures_util::future::try_future::MapErr\">MapErr</a>&lt;F, N&gt;: Future,</span>"],["impl&lt;F, N&gt; Future for <a class=\"struct\" href=\"tower/util/future/struct.MapResponseFuture.html\" title=\"struct tower::util::future::MapResponseFuture\">MapResponseFuture</a>&lt;F, N&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/try_future/struct.MapOk.html\" title=\"struct futures_util::future::try_future::MapOk\">MapOk</a>&lt;F, N&gt;: Future,</span>"],["impl&lt;F, N&gt; Future for <a class=\"struct\" href=\"tower/util/future/struct.MapResultFuture.html\" title=\"struct tower::util::future::MapResultFuture\">MapResultFuture</a>&lt;F, N&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/future/struct.Map.html\" title=\"struct futures_util::future::future::Map\">Map</a>&lt;F, N&gt;: Future,</span>"],["impl&lt;S, Req&gt; Future for <a class=\"struct\" href=\"tower/util/struct.Oneshot.html\" title=\"struct tower::util::Oneshot\">Oneshot</a>&lt;S, Req&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"tower/trait.Service.html\" title=\"trait tower::Service\">Service</a>&lt;Req&gt;,</span>"],["impl&lt;F, T, E&gt; Future for <a class=\"struct\" href=\"tower/util/future/optional/struct.ResponseFuture.html\" title=\"struct tower::util::future::optional::ResponseFuture\">ResponseFuture</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future&lt;Output = Result&lt;T, E&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Into&lt;<a class=\"type\" href=\"tower/type.BoxError.html\" title=\"type tower::BoxError\">BoxError</a>&gt;,</span>"],["impl&lt;T, Request&gt; Future for <a class=\"struct\" href=\"tower/util/struct.ReadyOneshot.html\" title=\"struct tower::util::ReadyOneshot\">ReadyOneshot</a>&lt;T, Request&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tower/trait.Service.html\" title=\"trait tower::Service\">Service</a>&lt;Request&gt;,</span>"],["impl&lt;'a, T, Request&gt; Future for <a class=\"struct\" href=\"tower/util/struct.Ready.html\" title=\"struct tower::util::Ready\">Ready</a>&lt;'a, T, Request&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tower/trait.Service.html\" title=\"trait tower::Service\">Service</a>&lt;Request&gt;,</span>"],["impl&lt;F1, F2, N&gt; Future for <a class=\"struct\" href=\"tower/util/future/struct.ThenFuture.html\" title=\"struct tower::util::future::ThenFuture\">ThenFuture</a>&lt;F1, F2, N&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/future/future/struct.Then.html\" title=\"struct futures_util::future::future::Then\">Then</a>&lt;F1, F2, N&gt;: Future,</span>"]],
"tracing":[["impl&lt;T:&nbsp;Future&gt; Future for <a class=\"struct\" href=\"tracing/instrument/struct.Instrumented.html\" title=\"struct tracing::instrument::Instrumented\">Instrumented</a>&lt;T&gt;"],["impl&lt;T:&nbsp;Future&gt; Future for <a class=\"struct\" href=\"tracing/instrument/struct.WithDispatch.html\" title=\"struct tracing::instrument::WithDispatch\">WithDispatch</a>&lt;T&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()