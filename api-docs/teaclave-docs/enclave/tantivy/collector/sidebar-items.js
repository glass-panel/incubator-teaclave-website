window.SIDEBAR_ITEMS = {"struct":[["Count","`CountCollector` collector only counts how many documents match the query."],["DocSetCollector","Collectors that returns the set of DocAddress that matches the query."],["FacetCollector","Collector for faceting"],["FacetCounts","Intermediary result of the `FacetCollector` that stores the facet counts for all the segments."],["FilterCollector","The `FilterCollector` filters docs using a fast field value and a predicate. Only the documents for which the predicate returned “true” will be passed on to the next collector."],["FruitHandle","FruitHandle stores reference to the corresponding collector inside MultiCollector"],["HistogramCollector","Histogram builds an histogram of the values of a fastfield for the collected DocSet."],["MultiCollector","Multicollector makes it possible to collect on more than one collector. It should only be used for use cases where the Collector types is unknown at compile time."],["MultiFruit","MultiFruit keeps Fruits from every nested Collector"],["TopDocs","The `TopDocs` collector keeps track of the top `K` documents sorted by their score."]],"trait":[["Collector","Collectors are in charge of collecting and retaining relevant information from the document found and scored by the query."],["CustomScorer","`CustomScorer` makes it possible to define any kind of score."],["CustomSegmentScorer","A custom segment scorer makes it possible to define any kind of score for a given document belonging to a specific segment."],["Fruit","`Fruit` is the type for the result of our collection. e.g. `usize` for the `Count` collector."],["ScoreSegmentTweaker","A `ScoreSegmentTweaker` makes it possible to modify the default score for a given document belonging to a specific segment."],["ScoreTweaker","`ScoreTweaker` makes it possible to tweak the score emitted  by the scorer into another one."],["SegmentCollector","The `SegmentCollector` is the trait in charge of defining the collect operation at the scale of the segment."]]};