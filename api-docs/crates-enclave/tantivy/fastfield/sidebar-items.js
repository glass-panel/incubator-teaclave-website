window.SIDEBAR_ITEMS = {"enum":[["FastFieldType","The fast field type"]],"fn":[["intersect_alive_bitsets","Intersects two AliveBitSets in a new one. The two bitsets need to have the same max_value."],["write_alive_bitset","Write an alive `BitSet`"]],"struct":[["AliveBitSet","Set of alive `DocId`s."],["BytesFastFieldReader","Reader for byte array fast fields"],["BytesFastFieldWriter","Writer for byte array (as in, any number of bytes per document) fast fields"],["CompositeFastFieldSerializer","`CompositeFastFieldSerializer` is in charge of serializing fastfields on disk."],["FacetReader","The facet reader makes it possible to access the list of facets associated with a given document in a specific segment."],["FastFieldNotAvailableError","`FastFieldNotAvailableError` is returned when the user requested for a fast field reader, and the field was not defined in the schema as a fast field."],["FastFieldReaders","Provides access to all of the BitpackedFastFieldReader."],["FastFieldsWriter","The `FastFieldsWriter` groups all of the fast field writers."],["IntFastFieldWriter","Fast field writer for ints. The fast field writer just keeps the values in memory."],["MultiValueIndex","Index to resolve value range for given doc_id. Starts at 0."],["MultiValueU128FastFieldWriter","Writer for multi-valued (as in, more than one value per document) int fast field."],["MultiValuedFastFieldReader","Reader for a multivalued `u64` fast field."],["MultiValuedFastFieldWriter","Writer for multi-valued (as in, more than one value per document) int fast field."],["MultiValuedU128FastFieldReader","Reader for a multivalued `u128` fast field."]],"trait":[["Column","`Column` provides columnar access on a field."],["FastValue","Trait for types that are allowed for fast fields: (u64, i64 and f64, bool, DateTime)."]],"type":[["Result","Result when trying to access a fast field reader."]]};