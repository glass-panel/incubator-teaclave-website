window.SIDEBAR_ITEMS = {"constant":[["FAST","Flag to mark the field as a fast field (similar to Lucene’s DocValues)"],["INDEXED","Flag to mark the field as indexed. An indexed field is searchable and has a fieldnorm."],["STORED","Flag to mark the field as stored. This flag can apply to any kind of field."],["STRING","The field will be untokenized and indexed."],["TEXT","The field will be tokenized and indexed."]],"enum":[["Cardinality","Express whether a field is single-value or multi-valued."],["DatePrecision","DateTime Precision"],["DocParsingError","Error that may happen when deserializing a document from JSON."],["FacetParseError","An error enum for facet parser."],["FieldType","A `FieldType` describes the type (text, u64) of a field as well as how it should be handled by tantivy."],["IndexRecordOption","`IndexRecordOption` describes an amount information associated with a given indexed field."],["Type","Type of the value that a field can take."],["Value","Value represents the value of a any field. It is an enum over all over all of the possible field type."]],"fn":[["is_valid_field_name","Validator for a potential `field_name`. Returns true if the name can be use for a field name."]],"struct":[["BytesOptions","Define how a bytes field should be handled by tantivy."],["DateOptions","Defines how DateTime field should be handled by tantivy."],["Document","Tantivy’s Document is the object that can be indexed and then searched for."],["Facet","A Facet represent a point in a given hierarchy."],["FacetOptions","Define how a facet field should be handled by tantivy."],["Field","`Field` is represented by an unsigned 32-bit integer type. The schema holds the mapping between field names and `Field` objects."],["FieldEntry","A `FieldEntry` represents a field and its configuration. `Schema` are a collection of `FieldEntry`"],["FieldValue","`FieldValue` holds together a `Field` and its `Value`."],["IpAddrOptions","Define how an ip field should be handled by tantivy."],["JsonObjectOptions","The `JsonObjectOptions` make it possible to configure how a json object field should be indexed and stored."],["NamedFieldDocument","Internal representation of a document used for JSON serialization."],["NumericOptions","Define how an `u64`, `i64`, or `f64` field should be handled by tantivy."],["Schema","Tantivy has a very strict schema. You need to specify in advance, whether a field is indexed or not, stored or not, and RAM-based or not."],["SchemaBuilder","Tantivy has a very strict schema. You need to specify in advance whether a field is indexed or not, stored or not, and RAM-based or not."],["Term","Term represents the value that the token can take."],["TextFieldIndexing","Configuration defining indexing for a text field."],["TextOptions","Define how a text field should be handled by tantivy."]],"trait":[["IntoIpv6Addr","Trait to convert into an Ipv6Addr."]],"type":[["IntOptions","Deprecated use [`NumericOptions`] instead."]]};