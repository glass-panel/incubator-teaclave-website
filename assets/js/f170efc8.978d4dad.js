"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[4505],{1347:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"codebase/types","title":"Types","description":"This directory defines common types (useful structs and traits) such as file,","source":"@site/docs/codebase/types.md","sourceDirName":"codebase","slug":"/codebase/types","permalink":"/docs/codebase/types","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/incubator-teaclave-website/tree/master/sgx-sdk-api-docs/docs/codebase/types.md","tags":[],"version":"current","frontMatter":{"permalink":"/docs/codebase/types"},"sidebar":"tutorialSidebar","previous":{"title":"Tools","permalink":"/docs/codebase/tools"},"next":{"title":"Teaclave Worker","permalink":"/docs/codebase/worker"}}');var a=s(4848),c=s(8453);const o={permalink:"/docs/codebase/types"},r="Types",i={},d=[];function p(e){const t={code:"code",h1:"h1",header:"header",p:"p",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"types",children:"Types"})}),"\n",(0,a.jsxs)(t.p,{children:["This directory defines common types (useful structs and traits) such as file,\nfunction, and task used in the Teaclave platform. Note that the ",(0,a.jsx)(t.code,{children:"teaclave_types"}),"\ncrate can be used in both app and trusted enclave parts."]})]})}function l(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>r});var n=s(6540);const a={},c=n.createContext(a);function o(e){const t=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);