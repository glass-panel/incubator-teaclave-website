"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[642],{8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var r=n(6540);const o={},c=r.createContext(o);function i(e){const t=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(c.Provider,{value:t},e.children)}},9820:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"codebase/executor","title":"Function Executors","description":"Function executor is one of the core component in a FaaS platform to provide","source":"@site/docs/codebase/executor.md","sourceDirName":"codebase","slug":"/codebase/executor","permalink":"/docs/codebase/executor","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/incubator-teaclave-website/tree/master/sgx-sdk-api-docs/docs/codebase/executor.md","tags":[],"version":"current","frontMatter":{"permalink":"/docs/codebase/executor"},"sidebar":"tutorialSidebar","previous":{"title":"Examples","permalink":"/docs/codebase/examples"},"next":{"title":"File Agent","permalink":"/docs/codebase/file_agent"}}');var o=n(4848),c=n(8453);const i={permalink:"/docs/codebase/executor"},s="Function Executors",a={},u=[];function d(e){const t={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"function-executors",children:"Function Executors"})}),"\n",(0,o.jsx)(t.p,{children:"Function executor is one of the core component in a FaaS platform to provide\r\nexecution runtime for running user-defined functions. In Teaclave, we aim to\r\nprovide safe, secure and versatile function executors, which can guarantee the\r\nconfidentiality of security-sensitive data during computation, and also support\r\nfunctions written in different languages. In addition, we are working hard to\r\nachieve better security guarantees such as memory safety."}),"\n",(0,o.jsx)(t.p,{children:"In Teaclave, there are three executors to native, Python, and WebAssembly functions."}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Builtin Executor"}),": There are many useful built-in functions which are statically\r\ncompiled with Teaclave. Normally, these built-in functions are implemented in\r\nRust, and can provide better (native) performance. The Builtin executor is to\r\ndispatch function invocation requests to corresponding built-in function\r\nimplementations."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"MesaPy Executor"}),": The MesaPy executor provides a Python interpreter in SGX.\r\nUser-defined Python functions can be executed in the MesaPy executor. The\r\nexecutor also provides interfaces to fetch and store data through the runtime."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"WAMR Executor"}),": WebAssembly Micro Runtime (WAMR) is integrated into\r\nTeaclave to provide a interpreter for WebAssembly bytecode. Please refer to\r\nthe ",(0,o.jsx)(t.a,{href:"/docs/executing-wasm",children:"WebAssembly Executor Document"})," for more\r\ndetails on its usage."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["To add a new executor, you can implement the ",(0,o.jsx)(t.code,{children:"TeaclaveExecutor"})," trait (basically\r\nimplement the ",(0,o.jsx)(t.code,{children:"execute"})," function). Then, register the executor in the Teaclave\r\nworker. At last, the execution service will dispatch functions to the specific\r\nexecutor."]})]})}function l(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);