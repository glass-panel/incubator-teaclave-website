"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[366],{3037:e=>{e.exports=JSON.parse('{"permalink":"/blog/2021/03/02/announcing-teaclave-0.2.0","editUrl":"https://github.com/apache/incubator-teaclave-website/tree/master/site/blog/blog/2021-03-02-announcing-teaclave-0.2.0.md","source":"@site/blog/2021-03-02-announcing-teaclave-0.2.0.md","title":"Announcing Apache Teaclave (incubating) 0.2.0","description":"English | \u4e2d\u6587","date":"2021-03-02T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Announcing Apache Teaclave (incubating) 0.2.0","date":"2021-03-02T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Apache Teaclave (incubating) 0.2.0 \u53d1\u5e03","permalink":"/blog/2021/03/02/announcing-teaclave-0.2.0-cn"},"nextItem":{"title":"Teaclave Meetup #2","permalink":"/blog/2021/02/25/teaclave-meetup-2"}}')},3360:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>r});var t=i(3037),a=i(4848),l=i(8453);const s={title:"Announcing Apache Teaclave (incubating) 0.2.0",date:new Date("2021-03-02T00:00:00.000Z"),author:"Mingshen Sun"},c=void 0,o={authorsImageUrls:[void 0]},r=[{value:"Highlights",id:"highlights",level:2},{value:"0.2.0 Release Notes",id:"020-release-notes",level:2},{value:"Functions",id:"functions",level:3},{value:"SDK",id:"sdk",level:3},{value:"Docker",id:"docker",level:3},{value:"CLI",id:"cli",level:3},{value:"Documents",id:"documents",level:3},{value:"Bug Fixes",id:"bug-fixes",level:3},{value:"Misc",id:"misc",level:3},{value:"Download",id:"download",level:2},{value:"Documentation",id:"documentation",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/blog/2021-03-01-announcing-teaclave-0-2-0/",children:"English"})," | ",(0,a.jsx)(n.a,{href:"/blog/2021-03-01-announcing-teaclave-0-2-0-cn/",children:"\u4e2d\u6587"})]}),"\n",(0,a.jsxs)(n.p,{children:["On behalf of the Teaclave community, I am happy to announce the ",(0,a.jsx)(n.em,{children:"second"})," Apache\r\nIncubator release of Teaclave, 0.2.0. Teaclave is a universal secure computing\r\nplatform, making computation on privacy-sensitive data safe and simple."]}),"\n",(0,a.jsx)(n.p,{children:"In 0.2.0, we focus on various components including built-in functions, SDKs in\r\ndifferent languages, docker, command line interface, documents, etc."}),"\n",(0,a.jsx)(n.h2,{id:"highlights",children:"Highlights"}),"\n",(0,a.jsxs)(n.p,{children:["In version 0.2.0, we added more client SDKs in different languages; Rust, C, and\r\neven Swift. In ",(0,a.jsx)(n.a,{href:"/blog/2021-02-24-teaclave-meetup-2",children:"Teaclave Meetup #2"}),", we\r\nintroduced the design of client SDKs.\r\nBasically, we are using JSON serialization/deserialization to make the interface\r\nsimple and easy to work on."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Teaclave Client SDKs",src:i(8e3).A+"",width:"3738",height:"1792"})}),"\n",(0,a.jsx)(n.h2,{id:"020-release-notes",children:"0.2.0 Release Notes"}),"\n",(0,a.jsx)(n.p,{children:"Specifically, we have following updates:"}),"\n",(0,a.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Add the builtin PCA (Principal Component Analysis) function"}),"\n",(0,a.jsx)(n.li,{children:"Add the exposed password checking built-in function (#447)"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"sdk",children:"SDK"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Add Rust client SDK (#455)"}),"\n",(0,a.jsx)(n.li,{children:"Add C client SDK and examples (#470)"}),"\n",(0,a.jsx)(n.li,{children:"Add Swift SDK (iOS framework)"}),"\n",(0,a.jsx)(n.li,{children:"Change CMAC format from string to bytes array"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"docker",children:"Docker"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Add a ",(0,a.jsx)(n.code,{children:"teaclave-file-service "}),"container to the docker compose file to help run the examples (#446)"]}),"\n",(0,a.jsx)(n.li,{children:"Fix sim mode docker compose file (#462)"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"cli",children:"CLI"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"[cli] Add the attest subcommand to display attestation report from the remote Teaclave service"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"documents",children:"Documents"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"[docs] Add permalink for codebase's README (#428)"}),"\n",(0,a.jsx)(n.li,{children:"[docs] Add document of Deploying Teaclave on Azure Confidential Computing Virtual Machines"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"bug-fixes",children:"Bug Fixes"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"[binder] Add checks and test case for input/output buffer. (#423)"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"misc",children:"Misc"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Start to use GitHub Action (#473)"}),"\n",(0,a.jsx)(n.li,{children:"Add GitHub issue templates (#476)"}),"\n",(0,a.jsx)(n.li,{children:"Document polishing"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"download",children:"Download"}),"\n",(0,a.jsxs)(n.p,{children:["Teaclave 0.2.0 can be downloaded at ",(0,a.jsx)(n.a,{href:"/download/",children:"the download page"}),". Note that\r\nit is essential to verify the integrity of the downloaded file using the\r\nPGP signature (the ",(0,a.jsx)(n.code,{children:".asc"})," file) or a hash (the ",(0,a.jsx)(n.code,{children:".sha256"})," file)."]}),"\n",(0,a.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,a.jsxs)(n.p,{children:["If it is the first time to try Teaclave, we provide a simple but clear tutorial\r\nto guide you getting stated with Teaclave by invoking\r\n",(0,a.jsx)(n.a,{href:"/docs/my-first-function/",children:"your first function"})," in Teaclave."]}),"\n",(0,a.jsx)(n.p,{children:"Basically, you can build the Teaclave platform using docker with these commands:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ cd incubator-teaclave\r\n$ docker run --rm -v $(pwd):/teaclave -w /teaclave \\\r\n  -it teaclave/teaclave-build-ubuntu-1804-sgx-2.9.1:latest \\\r\n   bash -c ". /root/.cargo/env && \\\r\n     . /opt/sgxsdk/environment && \\\r\n     mkdir -p build && cd build && \\\r\n     cmake -DTEST_MODE=ON .. && \\\r\n     make"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Launch all services with ",(0,a.jsx)(n.code,{children:"docker-compose"})," using simulation mode:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ (cd docker && docker-compose -f docker-compose-ubuntu-1804-sgx-sim-mode.yml up --build)\n"})}),"\n",(0,a.jsx)(n.p,{children:"And invoke function with a Python client:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ cd examples/python\r\n$ PYTHONPATH=../../sdk/python python3 builtin_echo.py 'Hello, Teaclave!'\r\n[+] registering user\r\n[+] login\r\n[+] registering function\r\n[+] creating task\r\n[+] approving task\r\n[+] invoking task\r\n[+] getting result\r\n[+] done\r\n[+] function return:  b'Hello, Teaclave!'\n"})}),"\n",(0,a.jsxs)(n.p,{children:["If you want to understand the internals of Teaclave, we provide several\r\ndocuments about the ",(0,a.jsx)(n.a,{href:"/docs/#design",children:"design"})," of Teaclave. Also, we extensively\r\ndocument our ",(0,a.jsx)(n.a,{href:"docs/#codebase",children:"codebase"})," in each sub directories. At last, ",(0,a.jsx)(n.a,{href:"docs/#api-references",children:"API references"}),"\r\nare automatically generated and uploaded to our homepage."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8e3:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/teaclave-client-sdks-f1c75a54045646b45a1a44fffb0f162b.png"},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var t=i(6540);const a={},l=t.createContext(a);function s(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);