"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[1858],{8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var i=n(6540);const a={},r=i.createContext(a);function s(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:t},e.children)}},9274:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"codebase/attestation","title":"Attestation in Teaclave","description":"This directory contains the implementation of the attestation in Apache","source":"@site/docs/codebase/attestation.md","sourceDirName":"codebase","slug":"/codebase/attestation","permalink":"/docs/codebase/attestation","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/incubator-teaclave-website/tree/master/sgx-sdk-api-docs/docs/codebase/attestation.md","tags":[],"version":"current","frontMatter":{"permalink":"/docs/codebase/attestation"},"sidebar":"tutorialSidebar","previous":{"title":"How to Add Built-in Functions","permalink":"/docs/builtin-functions"},"next":{"title":"Binder","permalink":"/docs/codebase/binder"}}');var a=n(4848),r=n(8453);const s={permalink:"/docs/codebase/attestation"},o="Attestation in Teaclave",c={},d=[{value:"How it Works",id:"how-it-works",level:2},{value:"Attestation Report",id:"attestation-report",level:2},{value:"Verification",id:"verification",level:3},{value:"Freshness",id:"freshness",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"attestation-in-teaclave",children:"Attestation in Teaclave"})}),"\n",(0,a.jsx)(t.p,{children:"This directory contains the implementation of the attestation in Apache\r\nTeaclave."}),"\n",(0,a.jsx)(t.p,{children:"Attestation is the process of demonstrating that a software component is running\r\nproperly on a Trusted Execution Environment (e.g., Intel SGX)."}),"\n",(0,a.jsx)(t.p,{children:"Teaclave combines the remote attestation with a TLS connection to improve the\r\ntrustworthiness of two endpoints. Once established, it has attested that the\r\nrunning parties are inside trusted enclaves and provided trusted channels with\r\nend-to-end encryption, the enclave code's identity, and other information."}),"\n",(0,a.jsx)(t.p,{children:"The platform includes several services, and each service is running inside an\r\nenclave. Those services communicate with mutual-attested TLS channels."}),"\n",(0,a.jsx)(t.h2,{id:"how-it-works",children:"How it Works"}),"\n",(0,a.jsx)(t.p,{children:"We integrate the attestation process in the TLS handshake. The attested-TLS\r\nhandshake is similar to a normal TLS handshake, except the extension of the\r\ncertificate includes an SGX attestation report. We make the certificate\r\ncryptographically bound to a specific enclave instance by adding the public key\r\nof the certificate in the attestation report."}),"\n",(0,a.jsxs)(t.p,{children:["During the build time, the public keys of the auditor enclaves are hard-coded in\r\nTeaclave services enclave, and enclave measurements and signatures are loaded\r\nfrom outside during the runtime. Auditor enclaves verify and sign the identity\r\nof each service enclave. After each service receives the attestation report, it\r\nwill verify whether the ",(0,a.jsx)(t.code,{children:"MR_SIGNER"})," and ",(0,a.jsx)(t.code,{children:"MR_ENCLAVE"})," from the attestation report\r\nmatch the identity information signed by auditor enclaves. After that, it will\r\nverify the TLS certificate. If all the verifications pass, a secure attested\r\nchannel is established between two enclaves."]}),"\n",(0,a.jsx)(t.p,{children:"Please note the trusted channel can also have one-way (client -> server)\r\nattestation. Under the circumstances, only the server needs to run inside TEEs."}),"\n",(0,a.jsx)(t.h2,{id:"attestation-report",children:"Attestation Report"}),"\n",(0,a.jsxs)(t.p,{children:["After one party obtains an attestation report from the received certificate.\r\nTeaclave first verifies the attestation report with the ",(0,a.jsx)(t.code,{children:"report_ca_cert"})," from the\r\nattestation service provider (e.g., IAS report root CA certificate for EPID,\r\nor DCAP attestation server end-entity certificate for DCAP)."]}),"\n",(0,a.jsx)(t.h3,{id:"verification",children:"Verification"}),"\n",(0,a.jsxs)(t.p,{children:["There is much information included in an attestation report such as CPU\r\nversion, ISV version, product ID, etc. By default, Teaclave will check\r\n",(0,a.jsx)(t.code,{children:"MR_ENCLAVE"})," and ",(0,a.jsx)(t.code,{children:"MR_SIGNER"}),". Users can also define a customized\r\nverification function to check more information in attestation reports by\r\nimplementing the ",(0,a.jsx)(t.code,{children:"AttestationReportVerificationFn"})," function."]}),"\n",(0,a.jsx)(t.h3,{id:"freshness",children:"Freshness"}),"\n",(0,a.jsxs)(t.p,{children:["To make sure the platform is always up-to-date and trusted, Teaclave will update\r\nattestation report periodically. By default, the validity time of an attestation\r\nreport is 3600 seconds. It can be changed in the\r\n",(0,a.jsx)(t.a,{href:"https://github.com/apache/incubator-teaclave/blob/master/config/build.config.toml",children:(0,a.jsx)(t.code,{children:"build.config.toml"})}),"\r\nfile."]})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);