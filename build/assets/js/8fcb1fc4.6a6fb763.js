"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[8650],{3848:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"codebase/crypto","title":"Crypto Primitives","description":"This directory hosts all the implementations of cryptographic primitives used in","source":"@site/docs/codebase/crypto.md","sourceDirName":"codebase","slug":"/codebase/crypto","permalink":"/docs/codebase/crypto","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/incubator-teaclave-website/tree/master/sgx-sdk-api-docs/docs/codebase/crypto.md","tags":[],"version":"current","frontMatter":{"permalink":"/docs/codebase/crypto"},"sidebar":"tutorialSidebar","previous":{"title":"Configurations in Teaclave","permalink":"/docs/codebase/config"},"next":{"title":"Data Center Attestation Service","permalink":"/docs/codebase/dcap"}}');var s=r(4848),n=r(8453);const o={permalink:"/docs/codebase/crypto"},c="Crypto Primitives",a={},p=[];function d(e){const t={h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"crypto-primitives",children:"Crypto Primitives"})}),"\n",(0,s.jsx)(t.p,{children:"This directory hosts all the implementations of cryptographic primitives used in\r\nTeaclave for encryption/decryption of registered data."}),"\n",(0,s.jsx)(t.p,{children:"Current crypto primitives include:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"AES GCM: Commonly used symmetric-key cryptographic block ciphers. Supported\r\nkey sizes are: 128bits, 256bits."}),"\n",(0,s.jsx)(t.li,{children:"Teaclave File Key: Key for Teaclave file system (i.e., protected FS). Only\r\n128bits key is supported."}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>c});var i=r(6540);const s={},n=i.createContext(s);function o(e){const t=i.useContext(n);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);