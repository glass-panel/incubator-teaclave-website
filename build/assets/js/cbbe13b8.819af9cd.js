"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[601],{1818:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"azure-confidential-computing","title":"Deploying Teaclave on Azure Confidential Computing Virtual Machines","description":"If you want to try Teaclave on an Intel-SGX enabled machine instead of in simulation mode,","source":"@site/docs/azure-confidential-computing.md","sourceDirName":".","slug":"/azure-confidential-computing","permalink":"/docs/azure-confidential-computing","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/incubator-teaclave-website/tree/master/sgx-sdk-api-docs/docs/azure-confidential-computing.md","tags":[],"version":"current","frontMatter":{"permalink":"/docs/azure-confidential-computing"},"sidebar":"tutorialSidebar","previous":{"title":"Adding Executors","permalink":"/docs/adding-executors"},"next":{"title":"Build System","permalink":"/docs/build-system"}}');var i=t(4848),o=t(8453);const a={permalink:"/docs/azure-confidential-computing"},s="Deploying Teaclave on Azure Confidential Computing Virtual Machines",c={},l=[];function d(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"deploying-teaclave-on-azure-confidential-computing-virtual-machines",children:"Deploying Teaclave on Azure Confidential Computing Virtual Machines"})}),"\n",(0,i.jsxs)(n.p,{children:["If you want to try Teaclave on an Intel-SGX enabled machine instead of in simulation mode,\r\nAzure, as a cloud service provider, has provided ",(0,i.jsx)(n.a,{href:"https://azure.microsoft.com/en-us/blog/dcsv2series-vm-now-generally-available-from-azure-confidential-computing/",children:"Intel-SGX enabled virtual machines"}),".\r\nThis tutorial will guide you to deploy Teaclave on Azure confidential computing VMs."]}),"\n",(0,i.jsxs)(n.p,{children:["To get started, you need to create an Azure confidential computing VM. Please\r\nrefer to this documents: ",(0,i.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/azure/confidential-computing/quick-create-portal",children:"Quickstart: Deploy an Azure confidential computing VM in the Azure portal"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Normally, the SGX driver will be pre-installed after successfully creating an\r\nAzure confidential computing VM. Please use this command to check whether the\r\nSGX driver (the ",(0,i.jsx)(n.code,{children:"intel_sgx"})," kernel module) is properly installed."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ ls /dev/sgx\r\nenclave  provision\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then, install SGX architectural enclaves and quoting libraries for attestation."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ sudo apt-get install libssl-dev libcurl4-openssl-dev libprotobuf-dev\r\n$ echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | sudo tee /etc/apt/sources.list.d/intel-sgx.list\r\n$ wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | sudo apt-key add -\r\n$ sudo apt-get update && \\\r\n   sudo apt-get install libsgx-launch libsgx-urts libsgx-epid libsgx-urts libsgx-quote-ex  libsgx-aesm-quote-ex-plugin libsgx-aesm-epid-plugin\r\n$ sudo sed -i '/^#default quoting type = epid_linkable/s/^#//' /etc/aesmd.conf\r\n$ sudo service aesmd restart\n"})}),"\n",(0,i.jsx)(n.p,{children:"Install Docker and Docker Compose."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\r\n$ sudo add-apt-repository \\\r\n   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\r\n   $(lsb_release -cs) \\\r\n   stable"\r\n$ sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io\r\n$ sudo usermod -aG docker your-user-name\r\n$ sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose\r\n$ sudo chmod +x /usr/local/bin/docker-compose\n'})}),"\n",(0,i.jsx)(n.p,{children:"Build Teaclave."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'$ git clone https://github.com/apache/incubator-teaclave.git\r\n$ cd incubator-teaclave\r\n$ docker run --rm -v $(pwd):/teaclave -w /teaclave \\\r\n  -it teaclave/teaclave-build-ubuntu-1804-sgx-2.17.1:0.1.0 \\\r\n   bash -c ". /root/.cargo/env && \\\r\n     . /opt/sgxsdk/environment && \\\r\n     mkdir -p build && cd build && \\\r\n     git config --global --add safe.directory /teaclave && \\\r\n     cmake -DTEST_MODE=ON .. && \\\r\n     make"\r\n\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Setup environments for remote attestation. We are using Intel's Attestation\r\nService and linkable quote, and you can request access from the\r\n",(0,i.jsx)(n.a,{href:"https://api.portal.trustedservices.intel.com/EPID-attestation",children:"Development (DEV) attestation service portal"}),"\r\nfor testing."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"export AS_ALGO=sgx_epid\r\nexport AS_KEY=XXX\r\nexport AS_SPID=XXX\r\nexport AS_URL=https://api.trustedservices.intel.com:443\n"})}),"\n",(0,i.jsx)(n.p,{children:"Start Teaclave services."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"(cd docker && ./run-teaclave-services.sh -d)\n"})}),"\n",(0,i.jsx)(n.p,{children:"At last, try the hello world example."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ sudo apt install python3-pip\r\n$ pip3 install pyopenssl toml cryptography\r\n$ cd examples/python\r\n$ PYTHONPATH=../../sdk/python python3 builtin_echo.py 'Hello, Teaclave!'\r\n[+] registering user\r\n[+] login\r\n[+] registering function\r\n[+] creating task\r\n[+] invoking task\r\n[+] getting result\r\n[+] done\r\n[+] function return:  b'Hello, Teaclave!'\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can also open the port numbers of Teaclave's frontend/authentication\r\nservices in the Azure portal and run examples in another client machine with the\r\naddress this VM. Note that the client SDK needs enclave info (i.e., the\r\n",(0,i.jsx)(n.code,{children:"enclave_info.toml"})," file) and attestation service's cert (i.e., the\r\n",(0,i.jsx)(n.code,{children:"ias_root_ca_cert.pem"})," file) for attesting remote SGX services. The paths of\r\nthese files can be set in ",(0,i.jsx)(n.code,{children:"examples/python/utils.py"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var r=t(6540);const i={},o=r.createContext(i);function a(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);